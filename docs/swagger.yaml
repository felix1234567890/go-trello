basePath: /
definitions:
  fiber.Map:
    additionalProperties: true
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.CreateEventRequest:
    properties:
      date:
        type: string
      description:
        type: string
      location:
        type: string
      name:
        type: string
    required:
    - date
    - name
    type: object
  models.CreateUserRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        minLength: 5
        type: string
    required:
    - email
    - password
    - username
    type: object
  models.Event:
    properties:
      createdAt:
        type: string
      date:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      groups:
        items:
          $ref: '#/definitions/models.Group'
        type: array
      id:
        type: integer
      location:
        type: string
      name:
        type: string
      updatedAt:
        type: string
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.Group:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.LoginUserRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.UpdateEventRequest:
    properties:
      date:
        type: string
      description:
        type: string
      location:
        type: string
      name:
        minLength: 1
        type: string
    type: object
  models.UpdateUserRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        minLength: 5
        type: string
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample swagger for Fiber
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Go-Trello API
  version: "1.0"
paths:
  /events:
    get:
      consumes:
      - application/json
      description: Get a list of all events.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Event'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Get all events
      tags:
      - events
    post:
      consumes:
      - application/json
      description: Create a new event with the given details. Date can be YYYY-MM-DD
        or RFC3339.
      parameters:
      - description: Event details
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/models.CreateEventRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Event'
        "400":
          description: Invalid request body, validation error, or invalid date format
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Create a new event
      tags:
      - events
  /events/{event_id}/groups/{group_id}:
    delete:
      consumes:
      - application/json
      description: Disassociate a group from an event.
      parameters:
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: integer
      - description: Group ID
        in: path
        name: group_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Group removed from event successfully
          schema:
            $ref: '#/definitions/fiber.Map'
        "400":
          description: Invalid event ID or group ID format
          schema:
            $ref: '#/definitions/fiber.Map'
        "404":
          description: Event or Group not found, or group not in event
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Remove a group from an event
      tags:
      - events
    post:
      consumes:
      - application/json
      description: Associate a group with an event.
      parameters:
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: integer
      - description: Group ID
        in: path
        name: group_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Group added to event successfully
          schema:
            $ref: '#/definitions/fiber.Map'
        "400":
          description: Invalid event ID or group ID format
          schema:
            $ref: '#/definitions/fiber.Map'
        "404":
          description: Event or Group not found
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Add a group to an event
      tags:
      - events
  /events/{event_id}/users/{user_id}:
    delete:
      consumes:
      - application/json
      description: Disassociate a user from an event.
      parameters:
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: integer
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User removed from event successfully
          schema:
            $ref: '#/definitions/fiber.Map'
        "400":
          description: Invalid event ID or user ID format
          schema:
            $ref: '#/definitions/fiber.Map'
        "404":
          description: Event or User not found, or user not in event
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Remove a user from an event
      tags:
      - events
    post:
      consumes:
      - application/json
      description: Associate a user with an event.
      parameters:
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: integer
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User added to event successfully
          schema:
            $ref: '#/definitions/fiber.Map'
        "400":
          description: Invalid event ID or user ID format
          schema:
            $ref: '#/definitions/fiber.Map'
        "404":
          description: Event or User not found
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Add a user to an event
      tags:
      - events
  /events/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a specific event by its ID.
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Event deleted successfully
        "400":
          description: Invalid event ID format
          schema:
            $ref: '#/definitions/fiber.Map'
        "404":
          description: Event not found
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Delete an event by ID
      tags:
      - events
    get:
      consumes:
      - application/json
      description: Get details of a specific event by its ID.
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "400":
          description: Invalid event ID format
          schema:
            $ref: '#/definitions/fiber.Map'
        "404":
          description: Event not found
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Get an event by ID
      tags:
      - events
    put:
      consumes:
      - application/json
      description: Update an existing event with the given details. Date can be YYYY-MM-DD
        or RFC3339.
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Event details to update
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/models.UpdateEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "400":
          description: Invalid request body, validation error, or invalid date format
          schema:
            $ref: '#/definitions/fiber.Map'
        "404":
          description: Event not found
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Update an existing event
      tags:
      - events
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a token
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'Authentication successful, token returned (e.g., {\"token\":
            \"jwt_token_here\"})'
          schema:
            $ref: '#/definitions/fiber.Map'
        "400":
          description: 'Invalid request body (e.g., {\"message\": \"Invalid request
            body\"}) or validation errors (e.g., {\"errors\": {\"field\": \"error
            message\"}})'
          schema:
            $ref: '#/definitions/fiber.Map'
        "401":
          description: 'Unauthorized (e.g., {\"message\": \"Invalid username or password\"})'
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: 'Internal Server Error (e.g., {\"message\": \"Login failed\"}
            or {\"message\": \"Failed to create token\"})'
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: User login
      tags:
      - users
  /me:
    get:
      consumes:
      - application/json
      description: Get details of the currently authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: 'Details of the authenticated user (e.g., {\"user\": {\"id\":
            1, ...}})'
          schema:
            $ref: '#/definitions/fiber.Map'
      security:
      - ApiKeyAuth: []
      summary: Get current user
      tags:
      - users
  /users:
    get:
      consumes:
      - application/json
      description: Get a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: 'List of users (e.g., {\"users\": [{\"id\": 1, ...}]})'
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: 'Internal Server Error (e.g., {\"message\": \"Failed to retrieve
            users\"})'
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user and return an authentication token
      parameters:
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 'User created successfully, token returned (e.g., {\"token\":
            \"jwt_token_here\"})'
          schema:
            $ref: '#/definitions/fiber.Map'
        "400":
          description: 'Invalid request body (e.g., {\"message\": \"Invalid request
            body\"}) or validation errors (e.g., {\"errors\": {\"field\": \"error
            message\"}})'
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: 'Internal Server Error (e.g., {\"message\": \"Failed to create
            user\"} or {\"message\": \"Failed to create token\"})'
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'User deleted successfully (e.g., {\"message\": \"User deleted
            successfully\"})'
          schema:
            $ref: '#/definitions/fiber.Map'
        "404":
          description: 'User not found (e.g., {\"message\": \"User with id X not found\"})'
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: 'Internal Server Error (e.g., {\"message\": \"Failed to delete
            user\"})'
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get details of a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'User details (e.g., {\"user\": {\"id\": 1, ...}})'
          schema:
            $ref: '#/definitions/fiber.Map'
        "404":
          description: 'User not found (e.g., {\"message\": \"User with id X not found\"})'
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: 'Internal Server Error (e.g., {\"message\": \"Failed to retrieve
            user\"})'
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user's details
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User details to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'User updated successfully (e.g., {\"message\": \"User updated
            successfully\"})'
          schema:
            $ref: '#/definitions/fiber.Map'
        "400":
          description: 'Invalid request body (e.g., {\"message\": \"Invalid request
            body\"}) or validation errors (e.g., {\"errors\": {\"field\": \"error
            message\"}})'
          schema:
            $ref: '#/definitions/fiber.Map'
        "404":
          description: 'User not found (e.g., {\"message\": \"User with id X not found
            for update\"})'
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: 'Internal Server Error (e.g., {\"message\": \"Failed to update
            user\"})'
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Update a user
      tags:
      - users
swagger: "2.0"
